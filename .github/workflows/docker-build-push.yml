name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: ${{ secrets.AWS_REGION }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    #- name: Log in to Amazon ECR
      #run: |
        #aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      #env:
        #AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - id: docker-tag
      uses: yuya-takeyama/docker-tag-from-github-ref-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

   # - name: Build and push Docker image
    #  uses: vitr/actions-build-and-upload-to-ecs@master
      #with:
       # access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #account_id: ${{ secrets.AWS_ACCOUNT_ID }}
        #repo: deia-karunyk
        #region: eu-north-1
        #tags: latest
        #create_repo: false

    - name: Get timestamp
      id: get-timestamp
      run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: deia-karunyk
          IMAGE_TAG: commit-${{ steps.get-timestamp.outputs.timestamp }}
      run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Post-build cleanup
      run: docker system prune -af
